CREATE OR REPLACE PROCEDURE CA_CUESTIONARIO --CA = CREAR / ACTUALIZAR
  (
    CU_ID IN QUESTIONARY.ID%TYPE,
    CU_ID_EXAM IN QUESTIONARY.EXAM_ID%TYPE,
    CU_ID_QUESTION IN QUESTIONARY.QUESTION_ID%TYPE
  )
IS
  --CUESTIONARIO NUEVO DESDE LA PETICION - CUN
  V_CUN_ID      QUESTIONARY.ID%TYPE := CU_ID; --N/A
  V_CUN_ID_EXAM QUESTIONARY.EXAM_ID%TYPE := CU_ID_EXAM;
  V_CUN_ID_QUESTION  QUESTIONARY.QUESTION_ID%TYPE := CU_ID_QUESTION;

  --VARIABLES VERIFICACION DE GUARDADO. -G
  V_G_CU NUMBER;
  TOTAL NUMBER;

  BEGIN

    --SI El ID ES 0 SE TRATA DE UN NUEVO REGISTRO
    IF V_CUN_ID = 0 THEN

      -- seguarda el valor de la secuencia en el nuevo valor de la
      -- subarea
      SELECT HIBERNATE_SEQUENCE.NEXTVAL INTO V_CUN_ID FROM DUAL;

      -------INSERCION DE LA SUBAREA USANDO LA FUNCION CREAR_SUBAREA---------
      V_G_CU := CREAR_CUESTIONARIO(V_CUN_ID,V_CUN_ID_EXAM,V_CUN_ID_QUESTION);

      -- 1 significa error desde la funcion
      IF V_G_CU = 1 THEN
        RAISE_APPLICATION_ERROR(-20001, 'NO SE PUDO GUARDAR, PORQUE YA EXISTE EL CUESTIONARIO');
      END IF;

    ELSE --SI SE DIJITA POR EL USUARIO
        TOTAL := 0;
        SELECT COUNT(*) INTO TOTAL FROM QUESTIONARY WHERE ID = V_CUN_ID;

        IF TOTAL = 0 THEN -- SI EL TOTAL ES 0 NO SE ENCONTRO
                            --REGISTRO CON ESE ID ENTONCES LO CREA
            -------INSERCION DEL SUBAREA---------
            V_G_CU := CREAR_CUESTIONARIO(V_CUN_ID,V_CUN_ID_EXAM,V_CUN_ID_QUESTION);

            -- 1 significa error desde la funcion
            IF V_G_CU = 1 THEN
              RAISE_APPLICATION_ERROR(-20001, 'NO SE PUDO GUARDAR, PORQUE YA EXISTE EL EXAMEN');
            END IF;

        ELSE --SI ENCONTRO REGISTRO ENTONCES LA ACTUALIZA

            V_G_CU :=ACTUALIZAR_CUESTIONARIO(V_CUN_ID,V_CUN_ID_EXAM,V_CUN_ID_QUESTION);

            IF V_G_CU = 1 THEN
                Raise_Application_Error(-20001, 'El examen no se pudo actualizar');
            END IF;

        END IF;
    END IF;
  END CA_CUESTIONARIO;